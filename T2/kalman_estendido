% Filtro de Kalman extendido
clear all;close all;clc;

% Inicialização de Parâmetros
t = 1; n = 10;    %10^4 TAVA DEMORANDO MUITO;
d = 1; c = 0.5; i=0;

mi(:,:) = zeros(3,n);
sigma(:,:,:) = zeros(3,3,n);
x(:,:) = zeros(3,n);
Xr(:,:) = zeros(3,n);
z(:,:) = zeros(3,n);
Zr(:,:) = zeros(3,n);
u(:,:) = zeros(2,n);
K(:,:,:) = zeros(3,3,n);
H = eye(3);

%% Kalman estendido

while(t<n)
    t=t+1;

    G(:,:,t)=[1 0 -d*sin(mi(3,t-1)); 0 1 d*cos(mi(3,(t-1)));0 0 1];
    
    u(:,t) = [1;0];
    
    Xr(:,t) = [Xr(1,t-1)+d*cos(Xr(3,t-1))*u(1,t-1);  Xr(2,t-1)+d*sin(Xr(3,t-1))*u(1,t-1);   Xr(3,t-1)+c*u(2,t-1)]
    
    R = [0.3 0 0;0 0.25 0;0 0 0.2];          %Escolhida sem nenhum critério
    Q = [0.05 0 0;0 0.05 0;0 0 0.1*pi/180];  %Escolhida sem nenhum critério

    %Predição
    mib = [mi(1,t-1)+d*cos(mi(3,t-1))*u(1,t);  mi(2,t-1)+d*sin(mi(3,t-1))*u(1,t);   mi(3,t-1)+c*u(2,t)]; %g()
    sigmab = G(:,:,t)*sigma(:,:,t-1)*transpose(G(:,:,t)) + R;

    %Ganho de Kalman

    K(:,:,t) = sigmab*transpose(H)*inv(H*sigmab*transpose(H) + Q  );

    %Correção
    mi(:,t) = mib + K(:,:,t)*(  z(:,t) - mib  ); %h()
    [lin,~] = size(G);
    sigma(:,:,t)=(eye(lin)-K(:,:,t)*H)*sigmab;
    
    
end

% figure
% plot_kalman(mi(:,t),sigma(:,:,t));
figure
histogram(x(1,:))
figure
histogram(x(2,:))
figure
histogram(x(3,:))
